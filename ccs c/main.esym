D G "__PCM__" 0 0 ""5.036""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""03-Tem-22""
D G "__TIME__" 0 0 ""22:24:51""
D G "??0" 0 0 "" "Standard Header file for the PIC16F628A device ////////////////"
c L "set_tris_a" 1 3 6 "FUNCTION"
f N "set_tris_a" 1 37 ""
v L "value" 1 37 "int8" `53 
f B "set_tris_a" 1 37 "void(int8 value)" `52 
f N "set_tris_b" 1 38 ""
v L "value" 1 38 "int8" `55 
f B "set_tris_b" 1 38 "void(int8 value)" `54 
f N "get_tris_a" 1 39 ""
f B "get_tris_a" 1 39 "int8()" `56 
f N "get_tris_b" 1 40 ""
f B "get_tris_b" 1 40 "int8()" `57 
f N "output_a" 1 41 ""
v L "value" 1 41 "int8" `59 
f B "output_a" 1 41 "void(int8 value)" `58 
f N "output_b" 1 42 ""
v L "value" 1 42 "int8" `61 
f B "output_b" 1 42 "void(int8 value)" `60 
f N "input_a" 1 43 ""
f B "input_a" 1 43 "int8()" `62 
f N "input_b" 1 44 ""
f B "input_b" 1 44 "int8()" `63 
f N "input_change_a" 1 45 ""
f B "input_change_a" 1 45 "int8()" `64 
f N "input_change_b" 1 46 ""
f B "input_change_b" 1 46 "int8()" `65 
f N "port_b_pullups" 1 47 ""
v L "value" 1 47 "int8" `67 
f B "port_b_pullups" 1 47 "void(int8 value)" `66 
f N "input" 1 48 ""
v L "pin" 1 48 "int16" `69 
f B "input" 1 48 "int8(int16 pin)" `68 
f N "input_state" 1 49 ""
v L "pin" 1 49 "int16" `71 
f B "input_state" 1 49 "int8(int16 pin)" `70 
f N "output_low" 1 50 ""
v L "pin" 1 50 "int16" `73 
f B "output_low" 1 50 "void(int16 pin)" `72 
f N "output_high" 1 51 ""
v L "pin" 1 51 "int16" `75 
f B "output_high" 1 51 "void(int16 pin)" `74 
f N "output_toggle" 1 52 ""
v L "pin" 1 52 "int16" `77 
f B "output_toggle" 1 52 "void(int16 pin)" `76 
f N "output_bit" 1 53 ""
v L "pin" 1 53 "int16" `79 
v L "level" 1 53 "int8" `80 
f B "output_bit" 1 53 "void(int16 pin,int8 level)" `78 
f N "output_float" 1 54 ""
v L "pin" 1 54 "int16" `82 
f B "output_float" 1 54 "void(int16 pin)" `81 
f N "output_drive" 1 55 ""
v L "pin" 1 55 "int16" `84 
f B "output_drive" 1 55 "void(int16 pin)" `83  "Constants used to identify pins in the above are:"
d G "PIN_A0" 1 59 "40"
d G "PIN_A1" 1 60 "41"
d G "PIN_A2" 1 61 "42"
d G "PIN_A3" 1 62 "43"
d G "PIN_A4" 1 63 "44"
d G "PIN_A5" 1 64 "45"
d G "PIN_A6" 1 65 "46"
d G "PIN_A7" 1 66 "47"
d G "PIN_B0" 1 68 "48"
d G "PIN_B1" 1 69 "49"
d G "PIN_B2" 1 70 "50"
d G "PIN_B3" 1 71 "51"
d G "PIN_B4" 1 72 "52"
d G "PIN_B5" 1 73 "53"
d G "PIN_B6" 1 74 "54"
d G "PIN_B7" 1 75 "55"
d G "FALSE" 1 78 "0"
d G "TRUE" 1 79 "1"
d G "BYTE" 1 81 "int8"
d G "BOOLEAN" 1 82 "int1"
d G "getc" 1 84 "getch"
d G "fgetc" 1 85 "getch"
d G "getchar" 1 86 "getch"
d G "putc" 1 87 "putchar"
d G "fputc" 1 88 "putchar"
d G "fgets" 1 89 "gets"
d G "fputs" 1 90 "puts"
c L "output_drive" 1 3 3 "FUNCTION"
f N "restart_cause" 1 95 ""
f B "restart_cause" 1 95 "int8()" `85 
f N "reset_cpu" 1 96 ""
f B "reset_cpu" 1 96 "void()" `86 
f N "sleep" 1 97 ""
f B "sleep" 1 97 "void()" `87  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_FROM_SLEEP" 1 99 "3"
d G "WDT_TIMEOUT" 1 100 "11"
d G "MCLR_FROM_SLEEP" 1 101 "19"
d G "MCLR_FROM_RUN" 1 102 "27"
d G "NORMAL_POWER_UP" 1 103 "25"
d G "BROWNOUT_RESTART" 1 104 "26"
c L "sleep" 1 3 5 "FUNCTION"
f N "setup_timer_0" 1 111 ""
v L "mode" 1 111 "int8" `89 
f B "setup_timer_0" 1 111 "void(int8 mode)" `88 
f N "set_timer0" 1 112 ""
v L "value" 1 112 "int8" `91 
f B "set_timer0" 1 112 "void(int8 value)" `90 
f N "get_timer0" 1 113 ""
f B "get_timer0" 1 113 "int8()" `92 
f N "setup_counters" 1 114 ""
v L "mode" 1 114 "int8" `94 
v L "prescaler" 1 114 "int8" `95 
f B "setup_counters" 1 114 "void(int8 mode,int8 prescaler)" `93 
f N "set_rtcc" 1 115 ""
v L "value" 1 115 "int8" `97 
f B "set_rtcc" 1 115 "void(int8 value)" `96 
f N "get_rtcc" 1 116 ""
f B "get_rtcc" 1 116 "int8()" `98  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 1 118 "0"
d G "T0_EXT_L_TO_H" 1 119 "32"
d G "T0_EXT_H_TO_L" 1 120 "48"
d G "T0_DIV_1" 1 122 "8"
d G "T0_DIV_2" 1 123 "0"
d G "T0_DIV_4" 1 124 "1"
d G "T0_DIV_8" 1 125 "2"
d G "T0_DIV_16" 1 126 "3"
d G "T0_DIV_32" 1 127 "4"
d G "T0_DIV_64" 1 128 "5"
d G "T0_DIV_128" 1 129 "6"
d G "T0_DIV_256" 1 130 "7"
d G "T0_8_BIT" 1 133 "0"
d G "RTCC_INTERNAL" 1 135 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 136 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 137 "48"
d G "RTCC_DIV_1" 1 138 "8"
d G "RTCC_DIV_2" 1 139 "0"
d G "RTCC_DIV_4" 1 140 "1"
d G "RTCC_DIV_8" 1 141 "2"
d G "RTCC_DIV_16" 1 142 "3"
d G "RTCC_DIV_32" 1 143 "4"
d G "RTCC_DIV_64" 1 144 "5"
d G "RTCC_DIV_128" 1 145 "6"
d G "RTCC_DIV_256" 1 146 "7"
d G "RTCC_8_BIT" 1 147 "0"
c L "get_rtcc" 1 3 8 "FUNCTION"
f N "setup_wdt" 1 158 ""
v L "mode" 1 158 "int16" `100 
f B "setup_wdt" 1 158 "void(int16 mode)" `99 
f N "restart_wdt" 1 159 ""
f B "restart_wdt" 1 159 "void()" `101  "Constants used for SETUP_WDT() are:"
d G "WDT_18MS" 1 162 "8"
d G "WDT_36MS" 1 163 "9"
d G "WDT_72MS" 1 164 "10"
d G "WDT_144MS" 1 165 "11"
d G "WDT_288MS" 1 166 "12"
d G "WDT_576MS" 1 167 "13"
d G "WDT_1152MS" 1 168 "14"
d G "WDT_2304MS" 1 169 "15"
c L "restart_wdt" 1 3 3 "FUNCTION"
f N "setup_timer_1" 1 175 ""
v L "mode" 1 175 "int16" `103 
f B "setup_timer_1" 1 175 "void(int16 mode)" `102 
f N "get_timer1" 1 176 ""
f B "get_timer1" 1 176 "int16()" `104 
f N "set_timer1" 1 177 ""
v L "value" 1 177 "int16" `106 
f B "set_timer1" 1 177 "void(int16 value)" `105  "Constants used for SETUP_TIMER_1() are:"
d G "T1_DISABLED" 1 180 "0"
d G "T1_INTERNAL" 1 181 "0x85"
d G "T1_EXTERNAL" 1 182 "0x87"
d G "T1_EXTERNAL_SYNC" 1 183 "0x83"
d G "T1_CLK_OUT" 1 185 "8"
d G "T1_DIV_BY_1" 1 187 "0"
d G "T1_DIV_BY_2" 1 188 "0x10"
d G "T1_DIV_BY_4" 1 189 "0x20"
d G "T1_DIV_BY_8" 1 190 "0x30"
c L "set_timer1" 1 3 3 "FUNCTION"
f N "setup_timer_2" 1 195 ""
v L "mode" 1 195 "int8" `108 
v L "period" 1 195 "int8" `109 
v L "postscale" 1 195 "int8" `110 
f B "setup_timer_2" 1 195 "void(int8 mode,int8 period,int8 postscale)" `107 
f N "get_timer2" 1 196 ""
f B "get_timer2" 1 196 "int8()" `111 
f N "set_timer2" 1 197 ""
v L "value" 1 197 "int8" `113 
f B "set_timer2" 1 197 "void(int8 value)" `112  "Constants used for SETUP_TIMER_2() are:"
d G "T2_DISABLED" 1 199 "0"
d G "T2_DIV_BY_1" 1 200 "4"
d G "T2_DIV_BY_4" 1 201 "5"
d G "T2_DIV_BY_16" 1 202 "6"
c L "set_timer2" 1 3 4 "FUNCTION"
f N "setup_ccp1" 1 208 ""
v L "mode" 1 208 "int32" `115 
f B "setup_ccp1" 1 208 "void(int32 mode)" `114 
f N "setup_ccp1" 1 209 ""
v L "mode" 1 209 "int32" `117 
v L "pwm" 1 209 "int8" `118 
f G "setup_ccp1" 1 209 "void(int32 mode,int8 pwm)" `116 
f N "set_pwm1_duty" 1 210 ""
v L "value" 1 210 "int16" `120 
f B "set_pwm1_duty" 1 210 "void(int16 value)" `119  "Constants used for SETUP_CCPx() are:"
d G "CCP_OFF" 1 212 "0"
d G "CCP_CAPTURE_FE" 1 213 "0x04"
d G "CCP_CAPTURE_RE" 1 214 "0x05"
d G "CCP_CAPTURE_DIV_4" 1 215 "0x06"
d G "CCP_CAPTURE_DIV_16" 1 216 "0x07"
d G "CCP_COMPARE_SET_ON_MATCH" 1 217 "0x08"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 218 "0x09"
d G "CCP_COMPARE_INT" 1 219 "0x0A"
d G "CCP_COMPARE_RESET_TIMER" 1 220 "0x0B"
d G "CCP_PWM" 1 221 "0x0C"
d G "CCP_PWM_PLUS_1" 1 222 "0x1c"
d G "CCP_PWM_PLUS_2" 1 223 "0x2c"
d G "CCP_PWM_PLUS_3" 1 224 "0x3c"
c L "set_pwm1_duty" 1 3 2 "FUNCTION"
f N "setup_uart" 1 231 ""
v L "baud" 1 231 "int32" `125 
f B "setup_uart" 1 231 "void(int32 baud)" `124 
f N "setup_uart" 1 232 ""
v L "baud" 1 232 "int32" `127 
v L "stream" 1 232 "int8" `128 
f G "setup_uart" 1 232 "void(int32 baud,int8 stream)" `126 
f N "setup_uart" 1 233 ""
v L "baud" 1 233 "int32" `130 
v L "stream" 1 233 "int8" `131 
v L "clock" 1 233 "int32" `132 
f G "setup_uart" 1 233 "void(int32 baud,int8 stream,int32 clock)" `129 
f N "set_uart_speed" 1 234 ""
v L "baud" 1 234 "int32" `134 
f B "set_uart_speed" 1 234 "void(int32 baud)" `133 
f N "set_uart_speed" 1 235 ""
v L "baud" 1 235 "int32" `136 
v L "stream" 1 235 "int8" `137 
f G "set_uart_speed" 1 235 "void(int32 baud,int8 stream)" `135 
f N "set_uart_speed" 1 236 ""
v L "baud" 1 236 "int32" `139 
v L "stream" 1 236 "int8" `140 
v L "clock" 1 236 "int32" `141 
f G "set_uart_speed" 1 236 "void(int32 baud,int8 stream,int32 clock)" `138  "Constants used in setup_uart() are:"
d G "UART_ADDRESS" 1 240 "2"
d G "UART_DATA" 1 241 "4"
c L "set_uart_speed" 1 3 3 "FUNCTION"
f N "setup_comparator" 1 245 ""
v L "mode" 1 245 "int32" `143 
f B "setup_comparator" 1 245 "void(int32 mode)" `142  "Constants used in setup_comparator() are:"
d G "A0_A3_A1_A2" 1 247 "0xfff04"
d G "A0_A2_A1_A2" 1 248 "0x7ff03"
d G "NC_NC_A1_A2" 1 249 "0x6ff05"
d G "NC_NC_NC_NC" 1 250 "0x0ff07"
d G "A0_VR_A1_VR" 1 251 "0x3ff02"
d G "A3_VR_A2_VR" 1 252 "0xcff0A"
d G "A0_A2_A1_A2_OUT_ON_A3_A4" 1 253 "0x7e706"
d G "A3_A2_A1_A2" 1 254 "0xeff09"
d G "CP1_INVERT" 1 255 "0x00010"
d G "CP2_INVERT" 1 256 "0x00020"
c L "setup_comparator" 1 3 2 "FUNCTION"
f N "setup_vref" 1 263 ""
v L "mode" 1 263 "int8" `147 
f B "setup_vref" 1 263 "void(int8 mode)" `146  "Constants used in setup_vref() are:"
d G "VREF_LOW" 1 265 "0xa0"
d G "VREF_HIGH" 1 266 "0x80"
d G "VREF_A2" 1 268 "0x40"
c L "setup_vref" 1 3 2 "FUNCTION"
f N "setup_oscillator" 1 272 ""
v L "mode" 1 272 "int8" `149 
f B "setup_oscillator" 1 272 "void(int8 mode)" `148  "Constants used in setup_oscillator() are:"
d G "OSC_48KHZ" 1 274 "0"
d G "OSC_4MHZ" 1 275 "8"
c L "setup_oscillator" 1 3 3 "FUNCTION"
f N "abs" 1 281 ""
v L "x" 1 281 "sint8" `151 
f B "abs" 1 281 "sint8(sint8 x)" `150 
f N "abs" 1 282 ""
v L "x" 1 282 "sint16" `153 
f G "abs" 1 282 "sint16(sint16 x)" `152 
f N "abs" 1 283 ""
v L "x" 1 283 "sint32" `155 
f G "abs" 1 283 "sint32(sint32 x)" `154 
f N "abs" 1 284 ""
v L "x" 1 284 "float" `157 
f G "abs" 1 284 "float(float x)" `156 
f N "_mul" 1 285 ""
v L "??65535" 1 285 "int8" `159 
v L "??65535" 1 285 "int8" `160 
f B "_mul" 1 285 "int16(int8 ,int8 )" `158 
f N "_mul" 1 286 ""
v L "??65535" 1 286 "sint8" `159 
v L "??65535" 1 286 "sint8" `163 
f G "_mul" 1 286 "sint16(sint8 ,sint8 )" `161 
f N "_mul" 1 287 ""
v L "??65535" 1 287 "int16" `159 
v L "??65535" 1 287 "int16" `166 
f G "_mul" 1 287 "int32(int16 ,int16 )" `164 
f N "_mul" 1 288 ""
v L "??65535" 1 288 "sint16" `159 
v L "??65535" 1 288 "sint16" `169 
f G "_mul" 1 288 "sint32(sint16 ,sint16 )" `167  "Memory Manipulation Prototypes:"
f N "read_bank" 1 291 ""
v L "bank" 1 291 "int8" `171 
v L "offset" 1 291 "int8" `172 
f B "read_bank" 1 291 "int8(int8 bank,int8 offset)" `170 
f N "write_bank" 1 292 ""
v L "bank" 1 292 "int8" `174 
v L "offset" 1 292 "int8" `175 
v L "value" 1 292 "int8" `176 
f B "write_bank" 1 292 "void(int8 bank,int8 offset,int8 value)" `173 
f N "strcpy" 1 293 ""
v L "dest" 1 293 "*int8" `178 
v L "src" 1 293 "*int8" `179 
f B "strcpy" 1 293 "void(*int8 dest,*int8 src)" `177 
f N "memset" 1 294 ""
v L "destination" 1 294 "*int8" `181 
v L "value" 1 294 "int8" `182 
v L "num" 1 294 "int16" `183 
f B "memset" 1 294 "void(*int8 destination,int8 value,int16 num)" `180 
f N "memcpy" 1 295 ""
v L "destination" 1 295 "*int8" `185 
v L "source" 1 295 "*int8" `186 
v L "num" 1 295 "int16" `187 
f B "memcpy" 1 295 "void(*int8 destination,*int8 source,int16 num)" `184  "String Prototypes:"
f N "toupper" 1 298 ""
v L "cvalue" 1 298 "int8" `189 
f B "toupper" 1 298 "int8(int8 cvalue)" `188 
f N "tolower" 1 299 ""
v L "cvalue" 1 299 "int8" `191 
f B "tolower" 1 299 "int8(int8 cvalue)" `190 
f N "sprintf" 1 300 ""
v L "string" 1 300 "*int8" `193 
v L "cstring" 1 300 "*int8" `194 
f B "sprintf" 1 300 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `192  "Data Manipulators Prototypes:"
f N "shift_left" 1 303 ""
v L "address" 1 303 "*int8" `197 
v L "bytes" 1 303 "int8" `198 
v L "value" 1 303 "int8" `199 
f B "shift_left" 1 303 "int8(*int8 address,int8 bytes,int8 value)" `196 
f N "shift_right" 1 304 ""
v L "address" 1 304 "*int8" `201 
v L "bytes" 1 304 "int8" `202 
v L "value" 1 304 "int8" `203 
f B "shift_right" 1 304 "int8(*int8 address,int8 bytes,int8 value)" `200 
f N "rotate_left" 1 305 ""
v L "address" 1 305 "*int8" `205 
v L "bytes" 1 305 "int8" `206 
f B "rotate_left" 1 305 "void(*int8 address,int8 bytes)" `204 
f N "rotate_right" 1 306 ""
v L "address" 1 306 "*int8" `208 
v L "bytes" 1 306 "int8" `209 
f B "rotate_right" 1 306 "void(*int8 address,int8 bytes)" `207 
f N "swap" 1 307 ""
v L "value" 1 307 "int8" `211 
f B "swap" 1 307 "void(int8 value)" `210 
f N "make8" 1 308 ""
v L "var" 1 308 "int16" `213 
v L "offset" 1 308 "int8" `214 
f B "make8" 1 308 "int8(int16 var,int8 offset)" `212 
f N "make8" 1 309 ""
v L "var" 1 309 "int32" `213 
v L "offset" 1 309 "int8" `217 
f G "make8" 1 309 "int8(int32 var,int8 offset)" `215 
f N "make16" 1 310 ""
v L "varhigh" 1 310 "int8" `219 
v L "varlow" 1 310 "int8" `220 
f B "make16" 1 310 "int16(int8 varhigh,int8 varlow)" `218 
f N "make32" 1 311 ""
v L "var1" 1 311 "int16" `222 
f B "make32" 1 311 "int32(int16 var1)" `221 
f N "make32" 1 312 ""
v L "var1" 1 312 "int16" `224 
v L "var2" 1 312 "int16" `225 
f G "make32" 1 312 "int32(int16 var1,int16 var2)" `223 
f N "make32" 1 313 ""
v L "var1" 1 313 "int16" `224 
v L "var2" 1 313 "int8" `228 
f G "make32" 1 313 "int32(int16 var1,int8 var2)" `226 
f N "make32" 1 314 ""
v L "var1" 1 314 "int16" `230 
v L "var2" 1 314 "int8" `231 
v L "var3" 1 314 "int8" `232 
f G "make32" 1 314 "int32(int16 var1,int8 var2,int8 var3)" `229 
f N "make32" 1 315 ""
v L "var1" 1 315 "int8" `234 
f G "make32" 1 315 "int32(int8 var1)" `233 
f N "make32" 1 316 ""
v L "var1" 1 316 "int8" `224 
v L "var2" 1 316 "int8" `237 
f G "make32" 1 316 "int32(int8 var1,int8 var2)" `235 
f N "make32" 1 317 ""
v L "var1" 1 317 "int8" `230 
v L "var2" 1 317 "int8" `231 
v L "var3" 1 317 "int8" `241 
f G "make32" 1 317 "int32(int8 var1,int8 var2,int8 var3)" `238 
f N "make32" 1 318 ""
v L "var1" 1 318 "int8" `243 
v L "var2" 1 318 "int8" `244 
v L "var3" 1 318 "int8" `245 
v L "var4" 1 318 "int8" `246 
f G "make32" 1 318 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `242 
f N "make32" 1 319 ""
v L "var1" 1 319 "int8" `224 
v L "var2" 1 319 "int16" `249 
f G "make32" 1 319 "int32(int8 var1,int16 var2)" `247 
f N "make32" 1 320 ""
v L "var1" 1 320 "int8" `230 
v L "var2" 1 320 "int16" `231 
v L "var3" 1 320 "int8" `253 
f G "make32" 1 320 "int32(int8 var1,int16 var2,int8 var3)" `250 
f N "make32" 1 321 ""
v L "var1" 1 321 "int8" `230 
v L "var2" 1 321 "int8" `231 
v L "var3" 1 321 "int16" `257 
f G "make32" 1 321 "int32(int8 var1,int8 var2,int16 var3)" `254 
f N "bit_set" 1 322 ""
v L "var" 1 322 "int8" `259 
v L "bit" 1 322 "int8" `260 
f B "bit_set" 1 322 "void(int8 var,int8 bit)" `258 
f N "bit_set" 1 323 ""
v L "var" 1 323 "int16" `259 
v L "bit" 1 323 "int8" `263 
f G "bit_set" 1 323 "void(int16 var,int8 bit)" `261 
f N "bit_set" 1 324 ""
v L "var" 1 324 "int32" `259 
v L "bit" 1 324 "int8" `266 
f G "bit_set" 1 324 "void(int32 var,int8 bit)" `264 
f N "bit_clear" 1 325 ""
v L "var" 1 325 "int8" `268 
v L "bit" 1 325 "int8" `269 
f B "bit_clear" 1 325 "void(int8 var,int8 bit)" `267 
f N "bit_clear" 1 326 ""
v L "var" 1 326 "int16" `268 
v L "bit" 1 326 "int8" `272 
f G "bit_clear" 1 326 "void(int16 var,int8 bit)" `270 
f N "bit_clear" 1 327 ""
v L "var" 1 327 "int32" `268 
v L "bit" 1 327 "int8" `275 
f G "bit_clear" 1 327 "void(int32 var,int8 bit)" `273 
f N "bit_test" 1 328 ""
v L "var" 1 328 "int8" `277 
v L "bit" 1 328 "int8" `278 
f B "bit_test" 1 328 "int8(int8 var,int8 bit)" `276 
f N "bit_test" 1 329 ""
v L "var" 1 329 "int16" `277 
v L "bit" 1 329 "int8" `281 
f G "bit_test" 1 329 "int8(int16 var,int8 bit)" `279 
f N "bit_test" 1 330 ""
v L "var" 1 330 "int32" `277 
v L "bit" 1 330 "int8" `284 
f G "bit_test" 1 330 "int8(int32 var,int8 bit)" `282  "#use delay() Prototypes:"
f N "delay_cycles" 1 333 ""
v L "count" 1 333 "int8" `286 
f B "delay_cycles" 1 333 "void(int8 count)" `285 
f N "delay_ms" 1 334 ""
v L "time" 1 334 "int16" `288 
f B "delay_ms" 1 334 "void(int16 time)" `287 
f N "delay_us" 1 335 ""
v L "time" 1 335 "int16" `290 
f B "delay_us" 1 335 "void(int16 time)" `289  "#use rs232() Prototypes:"
f N "putchar" 1 338 ""
v L "cdata" 1 338 "int8" `292 
f B "putchar" 1 338 "void(int8 cdata)" `291 
f N "putchar" 1 339 ""
v L "cdata" 1 339 "int8" `294 
v L "stream" 1 339 "int8" `295 
f G "putchar" 1 339 "void(int8 cdata,int8 stream)" `293 
f N "puts" 1 340 ""
v L "string" 1 340 "*int8" `297 
f B "puts" 1 340 "void(*int8 string)" `296 
f N "puts" 1 341 ""
v L "string" 1 341 "*int8" `299 
v L "stream" 1 341 "int8" `300 
f G "puts" 1 341 "void(*int8 string,int8 stream)" `298 
f N "getch" 1 342 ""
f B "getch" 1 342 "int8()" `301 
f N "getch" 1 343 ""
v L "stream" 1 343 "int8" `303 
f G "getch" 1 343 "int8(int8 stream)" `302 
f N "gets" 1 344 ""
v L "string" 1 344 "*int8" `305 
f B "gets" 1 344 "void(*int8 string)" `304 
f N "gets" 1 345 ""
v L "string" 1 345 "*int8" `307 
v L "stream" 1 345 "int8" `308 
f G "gets" 1 345 "void(*int8 string,int8 stream)" `306 
f N "kbhit" 1 346 ""
f B "kbhit" 1 346 "int8()" `309 
f N "kbhit" 1 347 ""
v L "stream" 1 347 "int8" `311 
f G "kbhit" 1 347 "int8(int8 stream)" `310 
f N "printf" 1 348 ""
v L "string" 1 348 "*int8" `313 
f B "printf" 1 348 "void(*int8 string,*int8 _VA_LIST)" `312 
f N "fprintf" 1 349 ""
v L "stream" 1 349 "int8" `316 
v L "string" 1 349 "*int8" `317 
f B "fprintf" 1 349 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `315 
f N "putc_send" 1 350 ""
f B "putc_send" 1 350 "void()" `319 
f N "fputc_send" 1 351 ""
v L "stream" 1 351 "int8" `321 
f B "fputc_send" 1 351 "void(int8 stream)" `320 
f N "rcv_buffer_full" 1 352 ""
f B "rcv_buffer_full" 1 352 "int8()" `322 
f N "rcv_buffer_full" 1 353 ""
v L "stream" 1 353 "int8" `324 
f G "rcv_buffer_full" 1 353 "int8(int8 stream)" `323 
f N "rcv_buffer_bytes" 1 354 ""
f B "rcv_buffer_bytes" 1 354 "int16()" `325 
f N "rcv_buffer_bytes" 1 355 ""
v L "stream" 1 355 "int8" `327 
f G "rcv_buffer_bytes" 1 355 "int16(int8 stream)" `326 
f N "tx_buffer_full" 1 356 ""
f B "tx_buffer_full" 1 356 "int8()" `328 
f N "tx_buffer_full" 1 357 ""
v L "stream" 1 357 "int8" `330 
f G "tx_buffer_full" 1 357 "int8(int8 stream)" `329 
f N "tx_buffer_bytes" 1 358 ""
f B "tx_buffer_bytes" 1 358 "int16()" `331 
f N "tx_buffer_bytes" 1 359 ""
v L "stream" 1 359 "int8" `333 
f G "tx_buffer_bytes" 1 359 "int16(int8 stream)" `332  "#use i2c() Prototypes:"
f N "i2c_read" 1 362 ""
f B "i2c_read" 1 362 "int8()" `334 
f N "i2c_read" 1 363 ""
v L "stream" 1 363 "int8" `336 
f G "i2c_read" 1 363 "int8(int8 stream)" `335 
f N "i2c_read" 1 364 ""
v L "stream" 1 364 "int8" `338 
v L "ack" 1 364 "int8" `339 
f G "i2c_read" 1 364 "int8(int8 stream,int8 ack)" `337 
f N "i2c_write" 1 365 ""
v L "data" 1 365 "int8" `341 
f B "i2c_write" 1 365 "int8(int8 data)" `340 
f N "i2c_write" 1 366 ""
v L "stream" 1 366 "int8" `343 
v L "data" 1 366 "int8" `344 
f G "i2c_write" 1 366 "int8(int8 stream,int8 data)" `342 
f N "i2c_start" 1 367 ""
f B "i2c_start" 1 367 "void()" `345 
f N "i2c_start" 1 368 ""
v L "stream" 1 368 "int8" `347 
f G "i2c_start" 1 368 "void(int8 stream)" `346 
f N "i2c_start" 1 369 ""
v L "stream" 1 369 "int8" `349 
v L "restart" 1 369 "int8" `350 
f G "i2c_start" 1 369 "void(int8 stream,int8 restart)" `348 
f N "i2c_stop" 1 370 ""
f B "i2c_stop" 1 370 "void()" `351 
f N "i2c_stop" 1 371 ""
v L "stream" 1 371 "int8" `353 
f G "i2c_stop" 1 371 "void(int8 stream)" `352 
f N "i2c_isr_state" 1 372 ""
f B "i2c_isr_state" 1 372 "int8()" `354 
f N "i2c_slaveaddr" 1 373 ""
v L "addr" 1 373 "int8" `356 
f B "i2c_slaveaddr" 1 373 "void(int8 addr)" `355 
f N "i2c_slaveaddr" 1 374 ""
v L "stream" 1 374 "int8" `358 
v L "addr" 1 374 "int8" `359 
f G "i2c_slaveaddr" 1 374 "void(int8 stream,int8 addr)" `357 
f N "i2c_poll" 1 375 ""
f B "i2c_poll" 1 375 "int8()" `360 
f N "i2c_poll" 1 376 ""
v L "stream" 1 376 "int8" `362 
f G "i2c_poll" 1 376 "int8(int8 stream)" `361 
f N "i2c_init" 1 377 ""
v L "baud" 1 377 "int32" `364 
f B "i2c_init" 1 377 "void(int32 baud)" `363 
f N "i2c_init" 1 378 ""
v L "stream" 1 378 "int8" `366 
v L "baud" 1 378 "int32" `367 
f G "i2c_init" 1 378 "void(int8 stream,int32 baud)" `365  "#use spi() Prototypes:"
f N "spi_xfer" 1 381 ""
f B "spi_xfer" 1 381 "int8()" `368 
f N "spi_xfer" 1 382 ""
f G "spi_xfer" 1 382 "int16()" `369 
f N "spi_xfer" 1 383 ""
f G "spi_xfer" 1 383 "int32()" `370 
f N "spi_xfer" 1 384 ""
v L "data" 1 384 "int8" `372 
f G "spi_xfer" 1 384 "int8(int8 data)" `371 
f N "spi_xfer" 1 385 ""
v L "data" 1 385 "int16" `374 
f G "spi_xfer" 1 385 "int16(int16 data)" `373 
f N "spi_xfer" 1 386 ""
v L "data" 1 386 "int32" `376 
f G "spi_xfer" 1 386 "int32(int32 data)" `375 
f N "spi_xfer" 1 387 ""
v L "stream" 1 387 "int8" `378 
v L "data" 1 387 "int8" `379 
f G "spi_xfer" 1 387 "int8(int8 stream,int8 data)" `377 
f N "spi_xfer" 1 388 ""
v L "stream" 1 388 "int8" `378 
v L "data" 1 388 "int16" `382 
f G "spi_xfer" 1 388 "int16(int8 stream,int16 data)" `380 
f N "spi_xfer" 1 389 ""
v L "stream" 1 389 "int8" `378 
v L "data" 1 389 "int32" `385 
f G "spi_xfer" 1 389 "int32(int8 stream,int32 data)" `383 
f N "spi_xfer" 1 390 ""
v L "stream" 1 390 "int8" `387 
v L "data" 1 390 "int8" `388 
v L "bits" 1 390 "int8" `389 
f G "spi_xfer" 1 390 "int8(int8 stream,int8 data,int8 bits)" `386 
f N "spi_xfer" 1 391 ""
v L "stream" 1 391 "int8" `387 
v L "data" 1 391 "int16" `388 
v L "bits" 1 391 "int8" `393 
f G "spi_xfer" 1 391 "int16(int8 stream,int16 data,int8 bits)" `390 
f N "spi_xfer" 1 392 ""
v L "stream" 1 392 "int8" `387 
v L "data" 1 392 "int32" `388 
v L "bits" 1 392 "int8" `397 
f G "spi_xfer" 1 392 "int32(int8 stream,int32 data,int8 bits)" `394 
f N "spi_init" 1 393 ""
v L "baud" 1 393 "int32" `399 
f B "spi_init" 1 393 "void(int32 baud)" `398 
f N "spi_init" 1 394 ""
v L "stream" 1 394 "int8" `401 
v L "baud" 1 394 "int32" `402 
f G "spi_init" 1 394 "void(int8 stream,int32 baud)" `400 
f N "spi_speed" 1 395 ""
v L "baud" 1 395 "int32" `404 
f B "spi_speed" 1 395 "void(int32 baud)" `403 
f N "spi_speed" 1 396 ""
v L "stream" 1 396 "int8" `406 
v L "baud" 1 396 "int32" `407 
f G "spi_speed" 1 396 "void(int8 stream,int32 baud)" `405 
f N "spi_speed" 1 397 ""
v L "stream" 1 397 "int8" `409 
v L "baud" 1 397 "int32" `410 
v L "clock" 1 397 "int32" `411 
f G "spi_speed" 1 397 "void(int8 stream,int32 baud,int32 clock)" `408 
f N "spi_prewrite" 1 398 ""
v L "data" 1 398 "int8" `413 
f B "spi_prewrite" 1 398 "void(int8 data)" `412 
f N "spi_prewrite" 1 399 ""
v L "data" 1 399 "int16" `415 
f G "spi_prewrite" 1 399 "void(int16 data)" `414 
f N "spi_prewrite" 1 400 ""
v L "data" 1 400 "int32" `417 
f G "spi_prewrite" 1 400 "void(int32 data)" `416 
f N "spi_prewrite" 1 401 ""
v L "??65535" 1 401 "int8" `419 
v L "data" 1 401 "int8" `420 
f G "spi_prewrite" 1 401 "void(int8 ,int8 data)" `418 
f N "spi_prewrite" 1 402 ""
v L "??65535" 1 402 "int8" `419 
v L "data" 1 402 "int16" `423 
f G "spi_prewrite" 1 402 "void(int8 ,int16 data)" `421 
f N "spi_prewrite" 1 403 ""
v L "??65535" 1 403 "int8" `419 
v L "data" 1 403 "int32" `426 
f G "spi_prewrite" 1 403 "void(int8 ,int32 data)" `424 
f N "spi_xfer_in" 1 404 ""
f B "spi_xfer_in" 1 404 "int8()" `427 
f N "spi_xfer_in" 1 405 ""
f G "spi_xfer_in" 1 405 "int16()" `428 
f N "spi_xfer_in" 1 406 ""
f G "spi_xfer_in" 1 406 "int32()" `429 
f N "spi_xfer_in" 1 407 ""
v L "bits" 1 407 "int8" `431 
f G "spi_xfer_in" 1 407 "int8(int8 bits)" `430 
f N "spi_xfer_in" 1 408 ""
v L "bits" 1 408 "int8" `433 
f G "spi_xfer_in" 1 408 "int16(int8 bits)" `432 
f N "spi_xfer_in" 1 409 ""
v L "bits" 1 409 "int8" `435 
f G "spi_xfer_in" 1 409 "int32(int8 bits)" `434 
f N "spi_xfer_in" 1 410 ""
v L "stream" 1 410 "int8" `437 
v L "bits" 1 410 "int8" `438 
f G "spi_xfer_in" 1 410 "int8(int8 stream,int8 bits)" `436 
f N "spi_xfer_in" 1 411 ""
v L "stream" 1 411 "int8" `437 
v L "bits" 1 411 "int8" `441 
f G "spi_xfer_in" 1 411 "int16(int8 stream,int8 bits)" `439 
f N "spi_xfer_in" 1 412 ""
v L "stream" 1 412 "int8" `437 
v L "bits" 1 412 "int8" `444 
f G "spi_xfer_in" 1 412 "int32(int8 stream,int8 bits)" `442  "#use rtos() Prototypes:"
f N "rtos_run" 1 415 ""
f B "rtos_run" 1 415 "void()" `445 
f N "rtos_yield" 1 416 ""
f B "rtos_yield" 1 416 "void()" `446 
f N "rtos_enable" 1 417 ""
v L "task" 1 417 "int8" `448 
f B "rtos_enable" 1 417 "void(int8 task)" `447 
f N "rtos_disable" 1 418 ""
v L "task" 1 418 "int8" `450 
f B "rtos_disable" 1 418 "void(int8 task)" `449 
f N "rtos_terminate" 1 419 ""
f B "rtos_terminate" 1 419 "void()" `451 
f N "rtos_await" 1 420 ""
v L "flag" 1 420 "int8" `453 
f B "rtos_await" 1 420 "void(int8 flag)" `452 
f N "rtos_wait" 1 421 ""
v L "sem" 1 421 "int8" `455 
f B "rtos_wait" 1 421 "void(int8 sem)" `454 
f N "rtos_signal" 1 422 ""
v L "sem" 1 422 "int8" `457 
f B "rtos_signal" 1 422 "void(int8 sem)" `456 
f N "rtos_msg_send" 1 423 ""
v L "task" 1 423 "int8" `459 
v L "msg" 1 423 "int8" `460 
f B "rtos_msg_send" 1 423 "void(int8 task,int8 msg)" `458 
f N "rtos_msg_read" 1 424 ""
f B "rtos_msg_read" 1 424 "int8()" `461 
f N "rtos_msg_poll" 1 425 ""
f B "rtos_msg_poll" 1 425 "int8()" `462 
f N "rtos_overrun" 1 426 ""
v L "task" 1 426 "int8" `464 
f B "rtos_overrun" 1 426 "int8(int8 task)" `463 
f N "rtos_stats" 1 427 ""
v L "task" 1 427 "int8" `466 
v L "stat" 1 427 "*int8" `467 
f B "rtos_stats" 1 427 "void(int8 task,*int8 stat)" `465  "#use timer() Prototypes:"
f N "get_ticks" 1 430 ""
f B "get_ticks" 1 430 "int8()" `468 
f N "get_ticks" 1 431 ""
f G "get_ticks" 1 431 "int16()" `469 
f N "get_ticks" 1 432 ""
f G "get_ticks" 1 432 "int32()" `470 
f N "get_ticks" 1 433 ""
v L "stream" 1 433 "int8" `472 
f G "get_ticks" 1 433 "int8(int8 stream)" `471 
f N "get_ticks" 1 434 ""
v L "stream" 1 434 "int8" `474 
f G "get_ticks" 1 434 "int16(int8 stream)" `473 
f N "get_ticks" 1 435 ""
v L "stream" 1 435 "int8" `476 
f G "get_ticks" 1 435 "int32(int8 stream)" `475 
f N "set_ticks" 1 436 ""
v L "value" 1 436 "int8" `478 
f B "set_ticks" 1 436 "void(int8 value)" `477 
f N "set_ticks" 1 437 ""
v L "value" 1 437 "int16" `480 
f G "set_ticks" 1 437 "void(int16 value)" `479 
f N "set_ticks" 1 438 ""
v L "value" 1 438 "int32" `482 
f G "set_ticks" 1 438 "void(int32 value)" `481 
f N "set_ticks" 1 439 ""
v L "stream" 1 439 "int8" `484 
v L "value" 1 439 "int8" `485 
f G "set_ticks" 1 439 "void(int8 stream,int8 value)" `483 
f N "set_ticks" 1 440 ""
v L "stream" 1 440 "int8" `484 
v L "value" 1 440 "int16" `488 
f G "set_ticks" 1 440 "void(int8 stream,int16 value)" `486 
f N "set_ticks" 1 441 ""
v L "stream" 1 441 "int8" `484 
v L "value" 1 441 "int32" `491 
f G "set_ticks" 1 441 "void(int8 stream,int32 value)" `489  "#use pwm() Prototypes:"
f N "pwm_on" 1 444 ""
f B "pwm_on" 1 444 "void()" `492 
f N "pwm_on" 1 445 ""
v L "stream" 1 445 "int8" `494 
f G "pwm_on" 1 445 "void(int8 stream)" `493 
f N "pwm_off" 1 446 ""
f B "pwm_off" 1 446 "void()" `495 
f N "pwm_off" 1 447 ""
v L "stream" 1 447 "int8" `497 
f G "pwm_off" 1 447 "void(int8 stream)" `496 
f N "pwm_set_duty" 1 448 ""
v L "duty" 1 448 "int16" `499 
f B "pwm_set_duty" 1 448 "void(int16 duty)" `498 
f N "pwm_set_duty" 1 449 ""
v L "stream" 1 449 "int8" `501 
v L "duty" 1 449 "int16" `502 
f G "pwm_set_duty" 1 449 "void(int8 stream,int16 duty)" `500 
f N "pwm_set_duty_percent" 1 450 ""
v L "percent" 1 450 "int16" `504 
f B "pwm_set_duty_percent" 1 450 "void(int16 percent)" `503 
f N "pwm_set_duty_percent" 1 451 ""
v L "stream" 1 451 "int8" `506 
v L "percent" 1 451 "int16" `507 
f G "pwm_set_duty_percent" 1 451 "void(int8 stream,int16 percent)" `505 
f N "pwm_set_frequency" 1 452 ""
v L "frequency" 1 452 "int32" `509 
f B "pwm_set_frequency" 1 452 "void(int32 frequency)" `508 
f N "pwm_set_frequency" 1 453 ""
v L "stream" 1 453 "int8" `511 
v L "frequency" 1 453 "int32" `512 
f G "pwm_set_frequency" 1 453 "void(int8 stream,int32 frequency)" `510  "#use capture() Prototypes:"
f N "get_capture_time" 1 456 ""
f B "get_capture_time" 1 456 "int16()" `513 
f N "get_capture_time" 1 457 ""
v L "stream" 1 457 "int8" `515 
f G "get_capture_time" 1 457 "int16(int8 stream)" `514 
f N "get_capture_event" 1 458 ""
f B "get_capture_event" 1 458 "int8()" `516 
f N "get_capture_event" 1 459 ""
v L "stream" 1 459 "int8" `518 
f G "get_capture_event" 1 459 "int8(int8 stream)" `517  "Enviroment Prototypes:"
c L "get_capture_event" 1 3 2 "FUNCTION"
f N "goto_address" 1 472 ""
v L "address" 1 472 "int16" `520 
f B "goto_address" 1 472 "void(int16 address)" `519 
f N "label_address" 1 473 ""
v L "label" 1 473 "int16" `522 
f B "label_address" 1 473 "int16(int16 label)" `521  "EEPROM Prototypes:"
t G "__EEADDRESS__" 1 480 "int8" `523 
f N "read_eeprom" 1 483 ""
v L "address" 1 483 "__EEADDRESS__" `525 
f B "read_eeprom" 1 483 "int8(__EEADDRESS__ address)" `524 
f N "write_eeprom" 1 484 ""
v L "address" 1 484 "__EEADDRESS__" `527 
v L "value" 1 484 "int8" `528 
f B "write_eeprom" 1 484 "void(__EEADDRESS__ address,int8 value)" `526  "INT"
c L "write_eeprom" 1 3 4 "FUNCTION"
f N "enable_interrupts" 1 491 ""
v L "interrupt" 1 491 "int32" `530 
f B "enable_interrupts" 1 491 "void(int32 interrupt)" `529 
f N "disable_interrupts" 1 492 ""
v L "interrupt" 1 492 "int32" `532 
f B "disable_interrupts" 1 492 "void(int32 interrupt)" `531 
f N "clear_interrupt" 1 493 ""
v L "interrupt" 1 493 "int32" `534 
f B "clear_interrupt" 1 493 "void(int32 interrupt)" `533 
f N "interrupt_active" 1 494 ""
v L "interrupt" 1 494 "int32" `536 
f B "interrupt_active" 1 494 "int8(int32 interrupt)" `535 
f N "interrupt_enabled" 1 495 ""
v L "interrupt" 1 495 "int32" `538 
f B "interrupt_enabled" 1 495 "int8(int32 interrupt)" `537 
f N "ext_int_edge" 1 496 ""
v L "source" 1 496 "int8" `540 
v L "edge" 1 496 "int8" `541 
f B "ext_int_edge" 1 496 "void(int8 source,int8 edge)" `539 
f N "jump_to_isr" 1 497 ""
v L "address" 1 497 "int16" `543 
f B "jump_to_isr" 1 497 "void(int16 address)" `542  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 1 499 "0x40"
d G "H_TO_L" 1 500 "0"
d G "GLOBAL" 1 502 "0x0BC0"
d G "PERIPH" 1 503 "0x0B40"
d G "INT_RTCC" 1 504 "0x000B20"
d G "INT_RB" 1 505 "0x00FF0B08"
d G "INT_EXT_L2H" 1 506 "0x50000B10"
d G "INT_EXT_H2L" 1 507 "0x60000B10"
d G "INT_EXT" 1 508 "0x000B10"
d G "INT_TBE" 1 509 "0x008C10"
d G "INT_RDA" 1 510 "0x008C20"
d G "INT_TIMER1" 1 511 "0x008C01"
d G "INT_TIMER2" 1 512 "0x008C02"
d G "INT_CCP1" 1 513 "0x008C04"
d G "INT_COMP" 1 514 "0x008C40"
d G "INT_TIMER0" 1 515 "0x000B20"
d G "INT_EEPROM" 1 516 "0x008C80"
D G "_STDLIB" 2 12 ""
D G "RAND_MAX" 2 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 2 25 "1"
T G "div_t" 2 33 "{sint8 quot,sint8 rem}" `547 
T G "ldiv_t" 2 38 "{sint16 quot,sint16 rem}" `551  "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "unsigned int16"
D G "size_t" 3 22 "unsigned int8"
D G "wchar_t" 3 26 "char"
D G "NULL" 3 27 "0"
D G "offsetof" 3 29 "(s,f) (offsetofbit(s,f)/8)"
C L "jump_to_isr" 2 43 2 "FUNCTION"
C L "jump_to_isr" 2 46 1 "*"
C L "jump_to_isr" 2 46 1 "*"
F N "atoi" 2 50 ""
V L "s" 2 50 "*int8" `553 
f G "atoi" 2 50 "sint8(*int8 s)" `552  "Syntax: signed int32  atoi32(char * s)"
F N "atoi32" 2 58 ""
V L "s" 2 58 "*int8" `555 
f G "atoi32" 2 58 "sint32(*int8 s)" `554  "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 2 46 2 "FUNCTION"
F N "itoa" 2 79 ""
V L "num" 2 79 "sint32" `557 
V L "base" 2 79 "int8" `558 
V L "s" 2 79 "*int8" `559 
f G "itoa" 2 79 "*int8(sint32 num,int8 base,*int8 s)" `556  "Standard template: signed int16  atol(char * s)"
C L "itoa" 2 81 1 "*"
C L "itoa" 2 81 1 "*"
F N "atol" 2 85 ""
V L "s" 2 85 "*int8" `561 
f G "atol" 2 85 "sint16(*int8 s)" `560  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 2 87 1 "*"
C L "atol" 2 87 1 "*"
C L "atol" 2 87 1 "*"
C L "atol" 2 87 1 "*"
F N "strtol" 2 93 ""
V L "s" 2 93 "*int8" `563 
V L "endptr" 2 93 "*int8" `564 
V L "base" 2 93 "sint8" `565 
f G "strtol" 2 93 "sint16(*int8 s,*int8 endptr,sint8 base)" `562  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 2 95 1 "*"
C L "strtol" 2 95 1 "*"
C L "strtol" 2 95 1 "*"
C L "strtol" 2 95 1 "*"
F N "strtoul" 2 101 ""
V L "s" 2 101 "*int8" `567 
V L "endptr" 2 101 "*int8" `568 
V L "base" 2 101 "sint8" `569 
f G "strtoul" 2 101 "int16(*int8 s,*int8 endptr,sint8 base)" `566  "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 2 95 2 "FUNCTION"
C L "strtoul" 2 103 1 "*"
C L "strtoul" 2 103 1 "*"
C L "strtoul" 2 103 1 "*"
F N "strtof" 2 110 ""
V L "s" 2 110 "*int8" `571 
V L "endptr" 2 110 "*int8" `572 
f G "strtof" 2 110 "float(*int8 s,*int8 endptr)" `570  "provided for compatibility"
D G "strtof48" 2 116 "(s,e) strtof(s, e)"
D G "strtod" 2 117 "(s,e) strtof(s, e)"
C L "strtof" 2 103 1 "FUNCTION"
C L "strtof" 2 120 1 "*"
D G "atof" 2 124 "(s)   strtof(s, 0)"
C L "strtof" 2 120 1 "FUNCTION"
C L "strtof" 2 143 1 "*"
C L "strtof" 2 143 1 "*"
C L "strtof" 2 143 1 "*"
F N "atoe" 2 149 ""
V L "s" 2 149 "*int8" `574 
f G "atoe" 2 149 "float(*int8 s)" `573  "Pseudo-random sequence generation functions"
C L "atoe" 2 143 1 "FUNCTION"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
F N "rand" 2 169 ""
f G "rand" 2 169 "int16()" `575  "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
F N "srand" 2 191 ""
V L "seed" 2 191 "int32" `577 
f G "srand" 2 191 "void(int32 seed)" `576  "Memory management functions"
C L "srand" 2 171 3 "FUNCTION"
F N "system" 2 205 ""
V L "string" 2 205 "*int8" `579 
f G "system" 2 205 "sint8(*int8 string)" `578  "Searching and sorting utilities"
C L "system" 2 171 1 "FUNCTION"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 4 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
D G "labs" 2 249 "abs"
F N "div" 2 251 ""
V L "numer" 2 251 "sint8" `581 
V L "denom" 2 251 "sint8" `582 
f G "div" 2 251 "div_t(sint8 numer,sint8 denom)" `580 
F N "ldiv" 2 252 ""
V L "numer" 2 252 "sint16" `584 
V L "denom" 2 252 "sint16" `585 
f G "ldiv" 2 252 "ldiv_t(sint16 numer,sint16 denom)" `583  "Multibyte character functions"
C L "ldiv" 2 229 4 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
D G "_STRING" 4 12 ""
C L "ldiv" 3 2 7 "FUNCTION"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 4 19 10 "FUNCTION"
F N "memmove" 4 34 ""
V L "s1" 4 34 "*int8" `587 
V L "s2" 4 34 "*int8" `588 
V L "n" 4 34 "int8" `589 
F G "memmove" 4 35 "*int8(*int8 s1,*int8 s2,int8 n)" `586 
V L "sc1" 4 36 "*int8" `590 
V L "sc2" 4 37 "*int8" `591 
D G "strcopy" 4 54 "strcpy"
F N "strncpy" 4 61 ""
V L "s1" 4 61 "*int8" `593 
V L "s2" 4 61 "*int8" `594 
V L "n" 4 61 "int8" `595 
F G "strncpy" 4 62 "*int8(*int8 s1,*int8 s2,int8 n)" `592 
V L "s" 4 63 "*int8" `596 
F N "strcat" 4 78 ""
V L "s1" 4 78 "*int8" `598 
V L "s2" 4 78 "*int8" `599 
F G "strcat" 4 79 "*int8(*int8 s1,*int8 s2)" `597 
V L "s" 4 80 "*int8" `600 
F N "strncat" 4 96 ""
V L "s1" 4 96 "*int8" `602 
V L "s2" 4 96 "*int8" `603 
V L "n" 4 96 "int8" `604 
F G "strncat" 4 97 "*int8(*int8 s1,*int8 s2,int8 n)" `601 
V L "s" 4 98 "*int8" `605 
C L "memcmp" 4 19 3 "FUNCTION"
F N "memcmp" 4 120 ""
V L "s1" 4 120 "*int8" `607 
V L "s2" 4 120 "*int8" `608 
V L "n" 4 120 "int8" `609 
F G "memcmp" 4 121 "sint8(*int8 s1,*int8 s2,int8 n)" `606 
V L "su1" 4 122 "*int8" `610 
V L "su2" 4 122 "*int8" `611 
C L "strcmp" 4 19 2 "FUNCTION"
F N "strcmp" 4 134 ""
V L "s1" 4 134 "*int8" `613 
V L "s2" 4 134 "*int8" `614 
F G "strcmp" 4 135 "sint8(*int8 s1,*int8 s2)" `612 
C L "strcoll" 4 19 2 "FUNCTION"
F N "strcoll" 4 144 ""
V L "s1" 4 144 "*int8" `616 
V L "s2" 4 144 "*int8" `617 
F G "strcoll" 4 145 "sint8(*int8 s1,*int8 s2)" `615 
C L "strncmp" 4 19 4 "FUNCTION"
F N "strncmp" 4 157 ""
V L "s1" 4 157 "*int8" `619 
V L "s2" 4 157 "*int8" `620 
V L "n" 4 157 "int8" `621 
F G "strncmp" 4 158 "sint8(*int8 s1,*int8 s2,int8 n)" `618 
C L "strxfrm" 4 19 4 "FUNCTION"
F N "strxfrm" 4 170 ""
V L "s1" 4 170 "*int8" `623 
V L "s2" 4 170 "*int8" `624 
V L "n" 4 170 "int8" `625 
F G "strxfrm" 4 171 "int8(*int8 s1,*int8 s2,int8 n)" `622 
V L "c" 4 172 "int8" `626 
V L "n1" 4 173 "int8" `627 
C L "strxfrm" 4 19 1 "FUNCTION"
F N "memchr" 4 201 ""
V L "s" 4 201 "*int8" `629 
V L "c" 4 201 "int8" `630 
V L "n" 4 201 "int8" `631 
F G "memchr" 4 202 "*int8(*int8 s,int8 c,int8 n)" `628 
V L "uc" 4 203 "int8" `632 
V L "su" 4 204 "*int8" `633 
F N "strchr" 4 215 ""
V L "s" 4 215 "*int8" `635 
V L "c" 4 215 "int8" `636 
F G "strchr" 4 216 "*int8(*int8 s,int8 c)" `634 
C L "strcspn" 4 19 4 "FUNCTION"
F N "strcspn" 4 227 ""
V L "s1" 4 227 "*int8" `638 
V L "s2" 4 227 "*int8" `639 
F G "strcspn" 4 228 "int8(*int8 s1,*int8 s2)" `637 
V L "sc1" 4 229 "*int8" `640 
V L "sc2" 4 229 "*int8" `641 
F N "strpbrk" 4 242 ""
V L "s1" 4 242 "*int8" `643 
V L "s2" 4 242 "*int8" `644 
F G "strpbrk" 4 243 "*int8(*int8 s1,*int8 s2)" `642 
V L "sc1" 4 244 "*int8" `645 
V L "sc2" 4 244 "*int8" `646 
F N "strrchr" 4 257 ""
V L "s" 4 257 "*int8" `648 
V L "c" 4 257 "int8" `649 
F G "strrchr" 4 258 "*int8(*int8 s,int8 c)" `647 
V L "p" 4 259 "*int8" `650 
C L "strspn" 4 19 2 "FUNCTION"
F N "strspn" 4 272 ""
V L "s1" 4 272 "*int8" `652 
V L "s2" 4 272 "*int8" `653 
F G "strspn" 4 273 "int8(*int8 s1,*int8 s2)" `651 
V L "sc1" 4 274 "*int8" `654 
V L "sc2" 4 274 "*int8" `655 
F N "strstr" 4 291 ""
V L "s1" 4 291 "*int8" `657 
V L "s2" 4 291 "*int8" `658 
F G "strstr" 4 292 "*int8(*int8 s1,*int8 s2)" `656 
V L "s" 4 293 "*int8" `659 
V L "t" 4 293 "*int8" `660 
F N "strtok" 4 330 ""
V L "s1" 4 330 "*int8" `662 
V L "s2" 4 330 "*int8" `663 
F G "strtok" 4 331 "*int8(*int8 s1,*int8 s2)" `661 
V L "beg" 4 332 "*int8" `664 
V L "end" 4 332 "*int8" `665 
V L "save" 4 333 "*int8" `666 
C L "strlen" 4 19 6 "FUNCTION"
F N "strlen" 4 379 ""
V L "s" 4 379 "*int8" `668 
F G "strlen" 4 380 "int8(*int8 s)" `667 
V L "sc" 4 381 "*int8" `669 
C L "stricmp" 4 19 2 "FUNCTION"
F N "stricmp" 4 390 ""
V L "s1" 4 390 "*int8" `671 
V L "s2" 4 390 "*int8" `672 
F G "stricmp" 4 391 "sint8(*int8 s1,*int8 s2)" `670 
F N "strlwr" 4 404 ""
V L "s" 4 404 "*int8" `676 
F G "strlwr" 4 405 "*int8(*int8 s)" `675 
V L "p" 4 406 "*int8" `677 
F N "strupr" 4 418 ""
V L "s" 4 418 "*int8" `679 
F G "strupr" 4 419 "*int8(*int8 s)" `678 
V L "p" 4 420 "*int8" `680 
F N "div" 2 274 ""
V L "numer" 2 274 "sint8" `581 
V L "denom" 2 274 "sint8" `683 
F G "div" 2 275 "div_t(sint8 numer,sint8 denom)" `580 
V L "val" 2 276 "div_t" `681 
F N "ldiv" 2 282 ""
V L "numer" 2 282 "sint16" `584 
V L "denom" 2 282 "sint16" `690 
F G "ldiv" 2 283 "ldiv_t(sint16 numer,sint16 denom)" `583 
V L "val" 2 284 "ldiv_t" `688 
F N "atoe" 2 361 ""
V L "s" 2 361 "*int8" `696 
F G "atoe" 2 362 "float(*int8 s)" `573 
V L "pow10" 2 363 "float" `695 
V L "result" 2 364 "float" `696 
V L "sign" 2 365 "int8" `697 
V L "expsign" 2 366 "int8" `698 
V L "c" 2 367 "int8" `699 
V L "ptr" 2 368 "int8" `700 
V L "i" 2 369 "int8" `701 
V L "exp" 2 370 "float" `702 
V L "expcnt" 2 371 "int8" `703 
C L "atoe" 2 397 1 "FUNCTION"
F N "atoi" 2 429 ""
V L "s" 2 429 "*int8" `716 
F G "atoi" 2 430 "sint8(*int8 s)" `552 
V L "result" 2 431 "sint8" `715 
V L "sign" 2 432 "int8" `716 
V L "base" 2 432 "int8" `717 
V L "index" 2 432 "int8" `718 
V L "c" 2 433 "int8" `719 
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
F N "atol" 2 498 ""
V L "s" 2 498 "*int8" `721 
F G "atol" 2 499 "sint16(*int8 s)" `560 
V L "result" 2 500 "sint16" `720 
V L "sign" 2 501 "int8" `721 
V L "base" 2 501 "int8" `722 
V L "index" 2 501 "int8" `723 
V L "c" 2 502 "int8" `724 
C L "atol" 2 397 1 "FUNCTION"
C L "atol" 2 397 1 "FUNCTION"
C L "atol" 2 397 1 "FUNCTION"
C L "atol" 2 397 1 "FUNCTION"
C L "mult_with10" 2 397 1 "FUNCTION"
F N "mult_with10" 2 565 ""
V L "num" 2 565 "int32" `726 
F G "mult_with10" 2 566 "sint32(int32 num)" `725 
F N "atoi32" 2 571 ""
V L "s" 2 571 "*int8" `728 
F G "atoi32" 2 572 "sint32(*int8 s)" `554 
V L "result" 2 573 "sint32" `727 
V L "sign" 2 574 "int8" `728 
V L "base" 2 574 "int8" `729 
V L "index" 2 574 "int8" `730 
V L "c" 2 575 "int8" `731 
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
F N "itoa" 2 770 ""
V L "num" 2 770 "sint32" `557 
V L "base" 2 770 "int8" `558 
V L "s" 2 770 "*int8" `735 
F G "itoa" 2 771 "*int8(sint32 num,int8 base,*int8 s)" `556 
V L "temp" 2 772 "int32" `732 
V L "i" 2 773 "int8" `733 
V L "sign" 2 773 "int8" `734 
V L "cnt" 2 773 "int8" `735 
V L "c" 2 774 "int8" `736 
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
F N "strtof" 2 885 ""
V L "s" 2 885 "*int8" `571 
V L "endptr" 2 885 "*int8" `745 
F G "strtof" 2 886 "float(*int8 s,*int8 endptr)" `570 
V L "pow10" 2 887 "float" `743 
V L "result" 2 888 "float" `744 
V L "skip" 2 889 "int1" `745 
V L "sign" 2 889 "int1" `746 
V L "point" 2 889 "int1" `747 
V L "c" 2 890 "int8" `748 
V L "ptr" 2 891 "int8" `749 
F N "strtoul" 2 1103 ""
V L "s" 2 1103 "*int8" `567 
V L "endptr" 2 1103 "*int8" `568 
V L "base" 2 1103 "sint8" `754 
F G "strtoul" 2 1104 "int16(*int8 s,*int8 endptr,sint8 base)" `566 
V L "sc" 2 1105 "*int8" `751 
V L "s1" 2 1105 "*int8" `752 
V L "sd" 2 1105 "*int8" `753 
V L "x" 2 1106 "int16" `754 
V L "sign" 2 1107 "int8" `755 
V L "digits" 2 1108 "int8[1]" `756 
C L "strtoul" 2 397 1 "FUNCTION"
C L "strtoul" 2 397 1 "FUNCTION"
C L "strtoul" 2 397 1 "FUNCTION"
F N "strtol" 2 1165 ""
V L "s" 2 1165 "*int8" `563 
V L "endptr" 2 1165 "*int8" `564 
V L "base" 2 1165 "sint8" `761 
F G "strtol" 2 1166 "sint16(*int8 s,*int8 endptr,sint8 base)" `562 
V L "sc" 2 1167 "*int8" `758 
V L "s1" 2 1167 "*int8" `759 
V L "sd" 2 1167 "*int8" `760 
V L "x" 2 1168 "sint16" `761 
V L "sign" 2 1169 "int8" `762 
V L "digits" 2 1170 "int8[1]" `763 
C L "strtol" 2 397 1 "FUNCTION"
C L "strtol" 2 397 1 "FUNCTION"
C L "strtol" 2 397 1 "FUNCTION"
F N "system" 2 1228 ""
V L "string" 2 1228 "*int8" `766 
F G "system" 2 1229 "sint8(*int8 string)" `578 
F N "mblen" 2 1233 ""
V L "s" 2 1233 "*int8" `766 
V L "n" 2 1233 "int8" `767 
F G "mblen" 2 1234 "int8(*int8 s,int8 n)" `765 
F N "mbtowc" 2 1238 ""
V L "pwc" 2 1238 "*int8" `769 
V L "s" 2 1238 "*int8" `770 
V L "n" 2 1238 "int8" `771 
F G "mbtowc" 2 1239 "int8(*int8 pwc,*int8 s,int8 n)" `768 
F N "wctomb" 2 1244 ""
V L "s" 2 1244 "*int8" `773 
V L "wchar" 2 1244 "int8" `774 
F G "wctomb" 2 1245 "int8(*int8 s,int8 wchar)" `772 
F N "mbstowcs" 2 1250 ""
V L "pwcs" 2 1250 "*int8" `776 
V L "s" 2 1250 "*int8" `777 
V L "n" 2 1250 "int8" `778 
F G "mbstowcs" 2 1251 "int8(*int8 pwcs,*int8 s,int8 n)" `775 
F N "wcstombs" 2 1256 ""
V L "s" 2 1256 "*int8" `780 
V L "pwcs" 2 1256 "*int8" `781 
V L "n" 2 1256 "int8" `782 
F G "wcstombs" 2 1257 "int8(*int8 s,*int8 pwcs,int8 n)" `779 
V G "_Randseed" 2 1266 "int32" `783 
F N "rand" 2 1268 ""
F G "rand" 2 1269 "int16()" `575 
F N "srand" 2 1274 ""
V L "seed" 2 1274 "int32" `788 
F G "srand" 2 1275 "void(int32 seed)" `576 
F N "*_Cmpfun" 2 1284 ""
V L "p1" 2 1284 "*int8" `788 
V L "p2" 2 1284 "*int8" `789 
T G "*_Cmpfun" 2 1284 "sint8(*int8 p1,*int8 p2)" `787 
F N "qsort" 2 1291 ""
V L "qdata" 2 1291 "*int8" `792 
V L "qitems" 2 1291 "int8" `793 
V L "qsize" 2 1291 "int8" `794 
V L "cmp" 2 1291 "_Cmpfun" `795 
F G "qsort" 2 1291 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)" `791 
V L "m" 2 1292 "int8" `796 
V L "j" 2 1292 "int8" `797 
V L "i" 2 1292 "int8" `798 
V L "l" 2 1292 "int8" `799 
V L "done" 2 1293 "int1" `800 
V L "t" 2 1294 "int8[16]" `801 
F N "bsearch" 2 1319 ""
V L "key" 2 1319 "*int8" `804 
V L "base" 2 1319 "*int8" `805 
V L "num" 2 1319 "int8" `806 
V L "width" 2 1319 "int8" `807 
V L "cmp" 2 1319 "_Cmpfun" `808 
F G "bsearch" 2 1320 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)" `803 
V L "p" 2 1321 "*int8" `809 
V L "q" 2 1321 "*int8" `810 
V L "n" 2 1322 "int8" `811 
V L "pivot" 2 1323 "int8" `812 
V L "val" 2 1324 "sint8" `813 
C L "bsearch" 2 397 1 "FUNCTION"
F N "MAIN" 0 10 ""
F G "MAIN" 0 11 "void()" `818 
C L "MAIN" 0 16 1 "FUNCTION"
V L "aciksure" 0 17 "int8" `821 
V L "kapalisure" 0 18 "int8" `822 
C L "MAIN" 0 16 5 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
V L "sayac" 0 35 "int8" `823 
V L "i" 0 36 "int8" `824 
C L "MAIN" 0 16 1 "FUNCTION"
V L "sayac" 0 58 "int8" `825 
V L "i" 0 59 "int8" `826 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_oscillator" 0 2
F B "delay_ms" 1 0
F B "delay_us" 1 0
